////=================================================================
////          SORGULAR (QUERIES) -- https://docs.mongodb.com/manual/reference/operator/query-comparison/  --  adresine bakabilirler

////=================================================================


////-----------------------------------------------------------------
//// 1) "URUNLER" adinda bir veritabani ve icerisinde "fiyatlar" 
//// adinda bir collection tanimlayalim.  
////-----------------------------------------------------------------
use("URUNLER");
db.fiyatlar.find().skip(1).limit(1);

////-----------------------------------------------------------------
//// 2) asagidaki dokumanlari collection'a kaydedelim ve listeleyelim.  
////-----------------------------------------------------------------
db.fiyatlar.insertMany([
{"urunAdi":"TV", "fiyat": 5000, "vergi": 10 ,"summary":[{"version":1},{"show":"yok"}]},
{"urunAdi":"Telefon", "fiyat": 3500, "vergi": 20 ,"hediye":"kapak"},
{"urunAdi":"Utu", "fiyat": 1500, "vergi": 5 },
{"urunAdi":"Koltuk", "fiyat": 5000, "vergi": 10},
{"urunAdi":"Buzdolabi", "fiyat": 4000, "vergi": 10 } ] ); 

use("URUNLER")
 db.fiyatlar.find();

 ////-----------------------------------------------------------------
//// 3) ilk üc dokumani sorgulayalim --- limit() metodu
////-----------------------------------------------------------------
use("URUNLER")


////-----------------------------------------------------------------
//// 4) Sadece 2. ve 3. dokumanlari sorgulayalim   
////-----------------------------------------------------------------
use("URUNLER")
db.fiyatlar.findOne();


////-----------------------------------------------------------------
//// 5) Birinci dokumani sorgulayalim   
////-----------------------------------------------------------------
use("URUNLER")
db.fiyatlar.findOne();

////=======================================================================================
////       LOGICAL QUERY OPERATOR (mantıksal sorgu) ($and ,$or, $not,$nor)
////
//// SYNTAX: { $and: [ {ifade1}, {ifade2} , ... , {ifadeN} ] } nor ve or, and gibi bencil
////         { field: { $not: { <operator-ifade> } } }  ==> ( {"vergi": {$not: {$eq:10}}});
////=======================================================================================

////-----------------------------------------------------------------
//// 5) fiyat=5000 olan ve urunAdi="TV" olan dokumanlari listeleyiniz. 
////-----------------------------------------------------------------
use("URUNLER")
db.fiyatlar.find({$and:[{"fiyat":5000},{"urunAdi":"TV"}]});

db.fiyatlar.find({"fiyat":5000,"urunAdi":"TV"});

////------------------------------------------------------------------
//// 6) urunAdi="Utu" olan veya vergi=10 olan dokumanlari listeleyiniz      
////------------------------------------------------------------------
 use("URUNLER")
db.fiyatlar.find({$or:[{"vergi":5000},{"urunAdi":"TV"}]});

////-----------------------------------------------------------------
//// 7) fiyat=5000 olan URUNLERi listeleyiniz.     
////-----------------------------------------------------------------
 db.fiyatlar.find({ "fiyat": 5000 });
use("URUNLER");
db.fiyatlar.find({fiyat: {&eq:5000},$comment:"benim bir yorumum var"});

//eşit olmayanlar
db.fiyatlar.find({fiyat: {$ne:5000}});

////--------------------------------------------------------------------------
//// 8) (urunAdi= TV  vergi=10) olmayan dokumanlari listeleyiniz , nor=hiçbiri
////--------------------------------------------------------------------------
use("URUNLER")
db.fiyatlar.find($nor:{urunAdi:"TV"},{vergi:10});

////-----------------------------------------------------------------
//// 9) urunAdi=TV olan kayitlarin sadece fiyat'ini listeleyiniz.
////     (Bu isleme Projection denilmektedir)

//// Projection'da gosterilmek istenen Field'a 1 degeri atanir Ornegin: 
//// {"fiyat":1}, gosterilmek istenmeyenler ise yazilmaz. 
//// Sadece _id icin bir istisna vardir.  onu istemiyorsak 0 ile belirticez
////
////// SYNTAX   db.collection.find( {query}, {projection}). aynı kişinin fiyatını id sini istediği için aynı parantez, 
///süslünün biri filtreleme şartları  için, biri göstermek istediğimiz field lar için
////-----------------------------------------------------------------
use("URUNLER")
db.fiyatlar.find( {urunAdi:"TV"}, {fiyat:1,  _id:0});


//-----------------------------------------------------------------
// 11) Tum dokumanlarin sadece fiyat ve urunAdini listeleyiniz.
//-----------------------------------------------------------------    

use("URUNLER")

db.fiyatlar.find(  {} ,{ fiyat:1, urunAdi:1,    _id:0}    );

////=================================================================
////                    COMPARAISON (karşılaştırma) OPERATOR 
//// $eq : esit mi
//// $lt : kücük mü  (less than)
//// $gt : buyuk mu (greater than)
//// $lte: kucuk esit mi
//// $gte: buyuk esit mi
//// $ne : esit degil mi
//// $in : belirtilen degerler, bir dizideki degerlerden birisine esit mi
//// $nin: belirtilen degerler, bir dizideki tum degerlere esit degil mi
//// SYNTAX :   {field: {$gte: value} }
////=================================================================

////-----------------------------------------------------------------
//// 14) fiyatı 3500'e esit veya daha fazla olan URUNLERi sadece 
////      urunAdi ve fiyatini listeleyiniz
////-----------------------------------------------------------------
use("URUNLER")
db.fiyatlar.find(  {} ,{ fiyat: {$gte:3500} fiyat:1, urunAdi:1,    _id:0}    );

////-----------------------------------------------------------------
//// 15) fiyatı 4000'e esit veya daha kucuk olan URUNLERin SADECE 
////  urunAdini listeleyiniz
////-----------------------------------------------------------------
db.fiyatlar.find({"fiyat": {$lte: 4000}} , {"urunAdi":1, "_id":0});

////-----------------------------------------------------------------
//// 16) fiyatı 1500 veya 3500 veya 7000 olan URUNLERi listeleyiniz
////-----------------------------------------------------------------
use("URUNLER")

db.fiyatlar.find(  {    fiyat: {$in:       [  1500, 3500,7000] }  }, {_id:0})

//üsttekinin olumsuzu
use("URUNLER")

db.fiyatlar.find(  {    fiyat: {$nin:       [  1500, 3500,7000] }  }, {_id:0})

///-----------------------------------------------------------------
//// 18) fiyatı 5000'den kucuk olup urunAdi Utu olmayan URUNLERin
//// SADECE urunAdi ve fiyat bilgilerini listeleyiniz
////-----------------------------------------------------------------
use("URUNLER");
db.fiyatlar.find()


////-----------------------------------------------------------------
//// 19) fiyatı 5000'den kucuk olan VEYA urunAdi Koltuk olan URUNLERin
//// SADECE urunAdi ve fiyat bilgilerini listeleyiniz
////-----------------------------------------------------------------


